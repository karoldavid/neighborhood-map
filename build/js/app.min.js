var neighborhood={region:{center:{name:"Warsaw",address:"Warszawa - Polska",coord:{lat:52.231778,lng:21.006162}},zoom:{initial:14,min:8,max:20},bounds:[52.152227,20.955794,52.283899,21.157324]},focus:{Transportation:["Airport","Train Station"],City:["City Center","Historic Center","Cultural Center","Museum","Park","Library","Arts Gallery","Mall"],Recommended:["Club","Restaurant","Hotel","Cinema"],POI:["Performing Arts"]},locations:[{name:"Muzeum Narodowe",address:"Aleje Jerozolimskie 3, 00-495 Warszawa - Polska",coord:{lat:52.231919,lng:21.024654},website:"http://www.mnw.art.pl/en/",tag:"Museum"},{name:"Warszawska Wytwórnia Wódek KONESER",address:"Ząbkowska 27, 03-735 Warszawa - Polska",coord:{lat:52.254405,lng:21.04419},website:"http://koneser.eu/",tag:"Museum"},{name:"Hilton Warsaw Hotel and Convention Centre",address:"Grzybowska 63, 00-844 Warszawa - Polska",coord:{lat:52.233893,lng:20.986264},website:"http://www3.hilton.com/en/hotels/poland/hilton-warsaw-hotel-and-convention-centre-WAWHIHI/index.html",tag:"Hotel"},{name:"Sheraton Warsaw Hotel",address:" Bolesława Prusa 2, 00-493 Warszawa - Polska",coord:{lat:52.227926,lng:21.024925},website:"http://www.sheraton.pl/en/",tag:"Hotel"},{name:"InterContinental Warsaw",address:"Emilii Plater 49, 00-125 Warszawa - Polska",coord:{lat:52.232408,lng:21.002608},website:"http://warsaw.intercontinental.com/",tag:"Hotel"},{name:"RADISSON BLU SOBIESKI HOTEL",address:"Plac Zawiszy 1, 02-025 Warszawa - Polska",coord:{lat:52.22442,lng:20.989001},website:"http://www.radissonblu.com/sobieski-warsaw",tag:"Hotel"},{name:"Biblioteka Narodowa",address:"Aleja Niepodległości 213, 02-086 Warszawa - Polska",coord:{lat:52.214485,lng:21.005539},website:"http://www.bn.org.pl/",tag:"Library"},{name:"Kino Femina",address:"Aleja Solidarności 115 Warszawa - Polska",coord:{lat:52.241984,lng:20.994493},website:"",tag:"Cinema"},{name:"Centrum",address:"Aleje Jerozolimskie, Warszawa - Polska",coord:{lat:52.231778,lng:21.006162},website:"https://www.google.pl/?gws_rd=ssl#safe=strict&q=centrum+Warszawy",tag:"City Center"},{name:"Pałac Kultury i Nauki",address:"Plac Defilad 1, 00-901 Warszawa - Polska",coord:{lat:52.231778,lng:21.006162},website:"http://www.pkin.pl/",tag:"Cultural Center"},{name:"Stare Miasto w Warszawie",address:"Plac Zamkowy, Warszawa - Polska",coord:{lat:52.247733,lng:21.013608},website:"http://www.stare-miasto.com/",tag:"Historic Center"},{name:"Tygmont Jazz Club",address:"Mazowiecka 6/8, Warszawa, Polska",coord:{lat:52.237082,lng:21.013234},website:"http://www.tygmont.com.pl/",tag:"Club"},{name:"Familijny Bar Mleczny",address:"Nowy Świat 39, 00-029 Warszawa - Polska",coord:{lat:52.234173,lng:21.018673},options:"Lunch",video:"http://news.bbc.co.uk/1/hi/programmes/fast_track/9714943.stm",website:"",tag:"Restaurant"},{name:"Restauracja Polska Rozana",address:"Chocimska 7, Warszawa - Polska",coord:{lat:52.2083889,lng:21.023467900000014},options:"Lunch, Dinner, Dessert",website:"http://restauracjarozana.com.pl/",tag:"Restaurant"},{name:"Stara Kamienica",address:"Str. Widok 8, Warszawa - Polska",coord:{lat:52.2315629,lng:21.0151429},options:"Brunch, Lunch, Dinner, Dessert",website:"http://www.stara-kamienica.com.pl/",tag:"Restaurant"},{name:"U Kucharzy",address:"Długa 52, Warszawa - Polska",coord:{lat:52.2456709,lng:21.001365899999996},options:"Dinner, Dessert",website:"http://www.gessler.pl/",tag:"Restaurant"},{name:"Teatr Dramatyczny",address:"Plac Defilad 1, Warszawa - Polska",coord:{lat:52.231755,lng:21.006482},website:"http://teatrdramatyczny.pl/",tag:"Performing Arts"},{name:"Warszawska Opera Kameralna",address:"Aleja Solidarności 76b, Warszawa - Polska",coord:{lat:52.243887,lng:20.997488},website:"http://www.operakameralna.pl/",tag:"Performing Arts"},{name:"Teatr Narodowy",address:"Plac Teatralny 3, Warszawa - Polska",coord:{lat:52.243349,lng:21.009372},website:"http://www.narodowy.pl/",tag:"Performing Arts"},{name:"Łazienki Królewskie w Warszawie",address:"Ujazdów, 01-999, Warszawa - Polska",coord:{lat:52.2152,lng:21.035},website:"http://www.lazienki-krolewskie.pl/pl",tag:"Park"},{name:"Fryderyk Chopin Museum",address:"Okólnik 1, Warszawa - Polska",coord:{lat:52.236468,lng:21.023129},website:"http://chopin.museum/en",tag:"Museum"},{name:"Lotnisko Chopina",address:"Żwirki i Wigury 1, Warszawa - Polska",coord:{lat:52.171799,lng:20.97321},website:"http://www.lotnisko-chopina.pl/en/index.html",tag:"Airport"},{name:"Lotnisko Warszawa-Babice",address:"Gen. Bryg. Sylwestra Kaliskiego 57, 01-476 Warszawa - Polska",coord:{lat:52.270079,lng:20.907559},website:"http://www.lotnisko-babice.pl/",tag:"Airport"},{name:"Warszawa Centralna",address:"Dworzec, 00-844 Warszawa - Polska",coord:{lat:52.228336,lng:21.003576},website:"http://intercity.pl/pl/",tag:"Train Station"},{name:"Warszawa Wschodnia",address:"Ul. Kijowska 16, 03-802 Warszawa - Polska",coord:{lat:52.252518,lng:21.051078},website:"http://rozklad-pkp.pl/en/terminal/warszawa-wschodnia",tag:"Train Station"},{name:"Polonia Palace Hotel",address:"Aleje Jerozolimskie 45, 00-692 Warszawa - Polska",coord:{lat:52.229239,lng:21.010275},website:"http://www.poloniapalace.com/default-en.html",tag:"Hotel"},{name:"Muzeum Powstania Warszawskiego",address:"Grzybowska 79, Warszawa - Polska",coord:{lat:52.232841,lng:20.980982},website:"http://www.1944.pl/",tag:"Museum"},{name:"Plan B",address:"Aleja Wyzwolenia 18, 00-999 Warszawa - Polska",coord:{lat:52.219978,lng:21.018735},website:"https://pl-pl.facebook.com/pages/Plan-B/200377996747550",tag:"Club"},{name:"Filharmonia Narodowa",address:"Jasna 5, 00-950, Warszawa - Polska",coord:{lat:52.234445,lng:21.01139},website:"http://www.filharmonia.pl/",tag:"Performing Arts"},{name:"Teatr Żydowski",address:"Plac Grzybowski 12/16, 00-104 Warszawa - Polska",coord:{lat:52.235887,lng:21.00223},website:"http://www.teatr-zydowski.art.pl/",tag:"Performing Arts"},{name:"Och-Teatr",address:"Grójecka 65, Warszawa - Polska",coord:{lat:52.214188,lng:20.979965},website:"http://ochteatr.com.pl/",tag:"Performing Arts"},{name:"Arkadia",address:"Aleja Jana Pawła II 82, 00-175 Warszawa Polska",coord:{lat:52.256251,lng:20.983644},website:"http://www.arkadia.com.pl/W/do/centre/strona-glowna",tag:"Mall"},{name:"Park Świętokrzyski",address:"Świętokrzyska, Warszawa - Polska",coord:{lat:52.233889,lng:21.005366},website:"http://zielona.um.warszawa.pl/tereny-zielone/parki/park-swietokrzyski",tag:"Park"},{name:"Teatr Wielki Opera Narodowa",address:"Plac Teatralny 1, 00-950 Warszawa - Polska",coord:{lat:52.243516,lng:21.010438},website:"http://teatrwielki.pl/",tag:"Performing Arts"},{name:"Teatr Studio",address:"Plac Defilad 1, Warszawa - Polska",coord:{lat:52.231832,lng:21.005982},website:"http://www.teatrstudio.pl/",tag:"Performing Arts"},{name:"Teatr Polski",address:"Kazimierza Karasia 2, Warszawa - Polska",coord:{lat:52.238474,lng:21.019542},website:"http://www.teatrpolski.waw.pl/",tag:"Performing Arts"},{name:"Capitol",address:"Marszałkowska 115, Warszawa - Polska",coord:{lat:52.241321,lng:21.003455},website:"http://www.scenacapitol.pl/teatr/",tag:"Performing Arts"},{name:"Teatr Ateneum",address:"Stefana Jaracza 2, Warszawa - Polska",coord:{lat:52.237316,lng:21.032791},website:"http://teatrateneum.pl/",tag:"Performing Arts"},{name:"Teatr Sabat Małgorzaty Potockiej",address:"Foksal 16, 00-372 Warszawa - Polska",coord:{lat:52.233873,lng:21.02123},website:"http://teatr-sabat.pl/",tag:"Performing Arts"},{name:"Studio Buffo",address:"Marii Konopnickiej 6, Warszawa - Polska",coord:{lat:52.228151,lng:21.026095},website:"http://studiobuffo.com.pl/",tag:"Performing Arts"},{name:"Biblioteka Uniwersytecka",address:"Dobra 56/66, Warszawa - Polska",coord:{lat:52.242642,lng:21.02487},website:"http://www.buw.uw.edu.pl/en/",tag:"Library"},{name:"Zachęta – Narodowa Galeria Sztuki",address:"Plac Małachowskiego 3, 00-916 Warszawa - Polska",coord:{lat:52.239336,lng:21.011535},website:"http://www.zacheta.art.pl/",tag:"Arts Gallery"},{name:"Parfois-Złote Tarasy",address:"Ulica Złota 59, 00-120 Warszawa",coord:{lat:52.230035,lng:21.002501},website:"http://zlotetarasy.pl/",tag:"Mall"}]};
var styles=[{featureType:"landscape",stylers:[{saturation:-100},{lightness:65},{visibility:"on"}]},{featureType:"poi",stylers:[{saturation:-100},{lightness:51},{visibility:"off"}]},{featureType:"road.highway",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"road.arterial",stylers:[{saturation:-100},{lightness:30},{visibility:"on"}]},{featureType:"road.local",stylers:[{saturation:-100},{lightness:40},{visibility:"on"}]},{featureType:"transit",stylers:[{saturation:-100},{visibility:"simplified"}]},{featureType:"administrative.province",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels",stylers:[{visibility:"on"},{lightness:-25},{saturation:-100}]},{featureType:"water",elementType:"geometry",stylers:[{hue:"#ffff00"},{lightness:-25},{saturation:-97}]}];
function app(e,o,t,n){"use strict";function s(e,o,t,n){var s=6371,i=a(t-e),r=a(n-o),c=Math.sin(i/2)*Math.sin(i/2)+Math.cos(a(e))*Math.cos(a(t))*Math.sin(r/2)*Math.sin(r/2),l=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),p=s*l;return p}function a(e){return e*(Math.PI/180)}var i,r,c=o,l=function(e){this.mapOptions={center:{lat:e.center.coord.lat,lng:e.center.coord.lng},zoom:e.zoom.initial,panControl:!1,zoomControl:!0,scrollwheel:!1,scaleControl:!1,liteMode:!0,streetViewControl:!1,overviewMapControl:!1,overviewMapControlOptions:{opened:!0},mapTypeControlOptions:{style:google.maps.MapTypeControlStyle.DEFAULT,mapTypeIds:[google.maps.MapTypeId.ROADMAP,google.maps.MapTypeId.SATELLITE,"map_style"],position:google.maps.ControlPosition.BOTTOM_CENTER},zoomControlOptions:{style:google.maps.ZoomControlStyle.DEFAULT,position:google.maps.ControlPosition.RIGHT_BOTTOM},streetViewControlOptions:{position:google.maps.ControlPosition.RIGHT_BOTTOM}}},p=function(e){this.name=e.name,this.marker="",this.address=e.address,this.options=e.options,this.website=e.website||"http://#",this.tag=e.tag;var o=this.address.lastIndexOf(","),n=this.address.slice(0,o);this.title=ko.pureComputed(function(){return this.name+", "+n+", "+this.tag},this),this.focus=ko.computed(function(){for(var e in t)if(t[e].indexOf(this.tag)>=0)return e;return""},this),this.lat=e.coord.lat,this.lng=e.coord.lng,this.visible=ko.observable(!0),this.img=ko.computed(function(){return"https://maps.googleapis.com/maps/api/streetview?size=100x66&location="+this.lat+","+this.lng},this),this.fs_cat="",this.fs_id=ko.observable(""),this.fs_photos=ko.observableArray(),this.fs_restaurants=ko.observableArray(),this.fs_hotels=ko.observableArray(),this.fs_tips=ko.observableArray()},g=function(){var o=this;o.links=ko.observableArray(),o.getLinks=ko.computed(function(){var t=setTimeout(function(){var e=$("#wikipedia-links");e.text("Wikipedia Could Not Be Reached."),console.log("Wikipedia Could Not Be Reached.")},5e3),n=e.center.name,s="jsonp",a="http://en.wikipedia.org/w/api.php",i=a+"?action=opensearch&search="+n+"&format=json&callback=wikiCallback";$.ajax({url:i,dataType:s,success:function(e){for(var n=e[1],s=e[2],a=n.length,i=0;a>i;i++){var r=n[i],c="http://en.wikipedia.org/wiki/"+r,l=s[i];o.links.push({url:c,title:r,definition:l})}clearTimeout(t)}})})},u=function(){var o=this;o.weatherStr=ko.observable("");var t="http://api.openweathermap.org/data/2.5/weather?lat="+e.center.coord.lat+"&lon="+e.center.coord.lng;$.getJSON(t,function(e){o.weatherStr(e.weather[0].description+"   "+Math.round(e.main.temp-273.15)+" °C")}).done(function(){console.log("GetWeather request succeeded!")}).fail(function(e,t,n){o.weatherStr("Open Weather Map Could Not Be Reached."),console.log("GetWeather request failed! "+t)}).always(function(){console.log("GetWeather request ended!")})},m=function(){var o=this;o.query=ko.observable(""),o.chosenLocationId=ko.observable(""),o.chosenFocusId=ko.observable(""),o.region=e.center.name.toUpperCase(),o.distance=Math.round(s(e.center.coord.lat,e.center.coord.lng,37.362517,-122.03476))+" km to Silicon Valley",c.sort(function(e,o){return e.name===o.name?0:e.name<o.name?-1:1}),o.myMap=ko.observableArray(ko.utils.arrayMap(c,function(e){return new p(e)})),o.currentLocation=ko.observable(""),o.currentImage=ko.observable(0),o.chosenDirectionId=function(e,t){if("POI"===o.currentLocation().focus()){var n=o.currentImage(),s=o.currentLocation().fs_photos().length,a={next:1,prev:-1},i=a[t.target.id];n+=i,n>s&&(n=0),0>n&&(n=s),o.currentImage(n)}},o.toggleStreetView=function(e,t){o.currentLocation()===e?google.maps.toggleStreetView(e):google.maps.openStreetView(e)},o.weather=(new u).weatherStr,o.wikipediaLinks=(new g).links;var n="VWJWF5S1DZEW1CM3LXB1XNAYWYACBNCFDC35CYSJQ4MF5NNZ",a="HE4ERXKDWNRP1VCF5FGJTTBMACM3WBEC03KTMKX0DAN5CXOH",l=20150705;o.myMap().forEach(function(e,t){var s=[e.lat,e.lng],i=e.name;$.ajax({url:"https://api.foursquare.com/v2/venues/search",dataType:"json",data:"limit=1&ll="+s+"&query="+i+"&client_id="+n+"&client_secret="+a+"&v="+l+"&m=foursquare",async:!0,success:function(e){var n=(e.response?e.response:"",e.response.hasOwnProperty("venues")?e.response.venues[0]:""),s=n&&n.hasOwnProperty("categories")?n.categories[0].name:"",a=n?n.id:"";o.myMap()[t].fs_cat=s,o.myMap()[t].fs_id(a)}})}),o.fsPhotos=ko.computed(function(){o.myMap().forEach(function(e){if("POI"===e.focus()&&e.fs_id()){var o=e.fs_id();$.ajax({url:"https://api.foursquare.com/v2/venues/"+o+"/photos",dataType:"json",data:"&client_id="+n+"&client_secret="+a+"&v="+l+"&m=foursquare",async:!0,success:function(o){var t=o.response?o.response:"",n=t.hasOwnProperty("photos")?o.response.photos.items:"";n.forEach(function(o,t){var n=o.prefix+"width"+o.width+o.suffix;e.fs_photos[t]!=n,e.fs_photos.push(n)})}})}})}),o.fsTips=ko.computed(function(){o.myMap().forEach(function(e){if("POI"===e.focus()&&e.fs_id()){var o=e.fs_id();$.ajax({url:"https://api.foursquare.com/v2/venues/"+o+"/tips",dataType:"json",data:"&client_id="+n+"&client_secret="+a+"&v="+l+"&m=foursquare",async:!0,success:function(o){var t=o.response?o.response:"",n=t.hasOwnProperty("tips")?o.response.tips.items:"";n.forEach(function(o,t){e.fs_tips()[t]!=o.text&&e.fs_tips.push(o.text)})}})}})}),o.reverseList=function(){o.myMap.reverse()},o.resetSearch=function(){google.maps.closeStreetView(),o.query(""),o.chosenLocationId(""),o.goToLocation(""),o.chosenFocusId(""),o.goToFocus("")},o.focusButtons=function(){var e=[];for(var o in t)e.push(o);return e},o.goToFocus=function(e){o.chosenFocusId(e!=o.chosenFocusId()?e:""),r&&r.close(),o.query(""),o.chosenLocationId(""),google.maps.closeStreetView(),o.myMap().forEach(function(e){e.visible(o.chosenFocusId()&&o.chosenFocusId()!==e.focus()?!1:!0),e.marker.setMap(o.chosenFocusId()&&o.chosenFocusId()!==e.focus()?null:i)});var t=new google.maps.LatLngBounds;o.searchResults().forEach(function(e){t.extend(e.marker.position)}),i.fitBounds(t)},o.goToLocation=function(e){o.chosenLocationId(e!=o.chosenLocationId()?e:""),o.chosenLocationId()&&o.show_info(e)},o.getSelectedLocation=ko.computed(function(){o.currentLocation(o.chosenLocationId())}),o.closeInfoWindow=ko.computed(function(){o.chosenLocationId()||r&&r.close()}),o.show_info=function(e){google.maps.event.trigger(e.marker,"click")},o.mouseOverListItem=function(e){google.maps.event.trigger(e.marker,"mouseover")},o.mouseOutListItem=function(e){google.maps.event.trigger(e.marker,"mouseout")},o.searchResults=ko.computed(function(){var e=o.query().toLowerCase();return ko.utils.arrayFilter(o.myMap(),function(o){return o.title().toLowerCase().indexOf(e)>=0&&o.visible()})}),o.mapMarkers=ko.computed(function(){var e=o.query().toLowerCase();e&&ko.utils.arrayFilter(o.myMap(),function(o){o.marker.setMap(o.title().toLowerCase().indexOf(e)>=0&&o.visible()?i:null)})})},d=function(e){var o=e.fs_cat||e.tag,t='<div class="info-window"><h3>'+e.name+'</h3><p class="address">Address:</p><p class="address">'+e.address+"</p><hr><p>"+o+'</p><a href="'+e.website+'" title="Go to '+e.website+'" target="_blank">Visit Website</a></div>';return t};ko.bindingHandlers.map={init:function(o,t,s,a){var c=new google.maps.StyledMapType(n,{name:"Styled Map"});i=new google.maps.Map(o,new l(e).mapOptions),i.mapTypes.set("map_style",c),i.setMapTypeId("map_style");var p=new google.maps.LatLngBounds(new google.maps.LatLng(e.bounds[0],e.bounds[1]),new google.maps.LatLng(e.bounds[2],e.bounds[3])),g=new google.maps.LatLngBounds,u=new google.maps.InfoWindow,m=t(),h={},f={Transportation:"eeb211",City:"5cb3ff",Recommended:"ff7563",POI:"d50f25",hover:"f0ffff",visited:"666666"};for(var v in f)h[v]=new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|"+f[v],new google.maps.Size(21,34),new google.maps.Point(0,0),new google.maps.Point(10,34));m().forEach(function(e){var o=new google.maps.Marker({map:i,position:new google.maps.LatLng(e.lat,e.lng),title:e.name,icon:h[e.focus()],animation:google.maps.Animation.DROP,draggable:!1});e.marker=o,g.extend(e.marker.position)}),m().forEach(function(e){function o(){e.marker.setAnimation(null!==e.marker.getAnimation()?null:google.maps.Animation.BOUNCE)}google.maps.event.addListener(e.marker,"click",function(){u.isOpen()&&(u.close(),r=null),i.panTo(e.marker.getPosition());var t=d(e);a.chosenLocationId(e),o(),setTimeout(o,500),setTimeout(function(){u.setContent(t),r=u,r.open(i,e.marker)},750),e.marker.setIcon(h.visited),e.visited=!0}),google.maps.event.addListener(u,"closeclick",function(){a.chosenLocationId("")}),google.maps.event.addListener(e.marker,"mouseover",function(e){this.setIcon(h.hover)}),google.maps.event.addListener(e.marker,"mouseout",function(o){this.setIcon(h[e.visited?"visited":e.focus()])})});var w=new google.maps.LatLng(e.center.coord.lat,e.center.coord.lng),k={position:w,addressControlOptions:{position:google.maps.ControlPosition.BOTTOM_CENTER},linksControl:!1,panControl:!1,zoomControlOptions:{style:google.maps.ZoomControlStyle.SMALL,position:google.maps.ControlPosition.RIGHT_BOTTOM},enableCloseButton:!1},L=new google.maps.StreetViewPanorama(document.getElementById("map-canvas"),k);L.setVisible(!1),L.setPov({heading:265,zoom:1,pitch:0}),google.maps.toggleStreetView=function(e){var o=new google.maps.LatLng(e.lat,e.lng);L.setPosition(new google.maps.LatLng(e.lat,e.lng));var t=L.location.latLng,n=google.maps.geometry.spherical.computeHeading(t,o);L.setPov({heading:n,zoom:1,pitch:0});var s=L.getVisible();L.setVisible(s===!1?!0:!1)},google.maps.openStreetView=function(e){var o=new google.maps.LatLng(e.lat,e.lng);L.setPosition(new google.maps.LatLng(e.lat,e.lng));var t=L.location.latLng,n=google.maps.geometry.spherical.computeHeading(t,o);L.setPov({heading:n,zoom:1,pitch:0}),L.getVisible()===!1&&L.setVisible(!0)},google.maps.closeStreetView=function(){var e=L.getVisible();e===!0&&L.setVisible(!1)},google.maps.InfoWindow.prototype.isOpen=function(){var e=u.getMap();return null!==e&&"undefined"!=typeof e},google.maps.event.addListener(i,"zoom_changed",function(){i.getZoom()<e.zoom.min?i.setZoom(e.zoom.min):i.getZoom()>e.zoom.max&&i.setZoom(e.zoom.max)}),google.maps.event.addListener(i,"dragend",function(){if(!p.contains(i.getCenter())){var e=i.getCenter(),o=e.lng(),t=e.lat(),n=p.getNorthEast().lng(),s=p.getNorthEast().lat(),a=p.getSouthWest().lng(),r=p.getSouthWest().lat();a>o&&(o=a),o>n&&(o=n),r>t&&(t=r),t>s&&(t=s),i.setCenter(new google.maps.LatLng(t,o))}}),google.maps.event.addDomListener(window,"resize",function(){var e=i.getCenter();google.maps.event.trigger(i,"resize"),i.fitBounds(g),i.setCenter(e)})}};var h=new m;ko.applyBindings(h)}
function makeDrawers(){"use strict";function e(e){var s=document.getElementById(e);s.style.display="none"}function s(e){var s=document.getElementById(e);s.style.display="block"}function t(){var e=document.querySelector("#locList > li.selected");e||(u.classList.contains("open")&&(u.classList.remove("open"),s("show-list")),L.classList.contains("open")&&(L.classList.remove("open"),s("show-list")))}var o=document.querySelector("#menu"),n=document.querySelector("#hide-list"),c=document.querySelector("#show-list"),i=document.querySelector("#hide-poi"),l=document.querySelector("#resetButton"),a=document.querySelector("main"),r=document.querySelector(".col-1");n.addEventListener("click",function(e){r.classList.remove("open"),s("show-list"),e.stopPropagation()}),c.addEventListener("click",function(s){r.classList.add("open"),e("show-list"),s.stopPropagation()});for(var d=document.getElementsByClassName("POI"),u=document.querySelector(".col-2"),p=d.length,m=0;p>m;m++)d[m].addEventListener("click",function(t){s("fs-all");var o=document.querySelector("#locList > li.selected");o&&!u.classList.contains("open")&&(u.classList.add("open"),r.classList.remove("open"),e("show-list")),t.stopPropagation()});i.addEventListener("click",function(e){u.classList.remove("open"),s("show-list"),e.stopPropagation()}),r.addEventListener("click",function(e){var t=document.querySelector("#locList > li.selected");t&&r.classList.contains("open")&&(r.classList.remove("open"),s("show-list")),e.stopPropagation()});var L=document.querySelector(".col-3"),v=document.querySelector(".col-4"),y=document.getElementsByClassName("sub-info"),h=y.length,f=[];$(".col-4 div").each(function(){f.push($(this).attr("id"))});for(var m=0;h>m;m++)y[m].addEventListener("click",function(t){for(var o=t.srcElement.id,n=f.length,c=0;n>c;c++)c!=o?e(f[c]):s(f[o]);v.classList.contains("open")||v.classList.add("open"),t.stopPropagation()});o.addEventListener("click",function(s){L.classList.toggle("open"),v.classList.contains("open")&&v.classList.remove("open"),L.classList.contains("open")&&u.classList.remove("open"),L.classList.contains("open")?(r.classList.remove("open"),e("show-list")):(r.classList.add("open"),e("show-list")),s.stopPropagation()}),a.addEventListener("click",function(){L.classList.remove("open"),v.classList.remove("open"),r.classList.contains("open")||s("show-list")}),l.addEventListener("click",function(){r.classList.remove("open"),u.classList.remove("open"),L.classList.remove("open"),v.classList.remove("open"),s("show-list")}),window.onclick=t}
//# sourceMappingURL=data:application/json;base64,